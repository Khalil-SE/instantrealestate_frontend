// // services/userService.js
// import axios from "axios";
// import API_ROUTES from "../config/apiRoutes";
// import useAuth from "../store/useAuth";

// export const updateUserMe = async (formData) => {
//   const accessToken = useAuth.getState().accessToken;
//   const setUser = useAuth.getState().setUser;

//   try {
//     const response = await axios.patch(
//       API_ROUTES.BASE_URL + API_ROUTES.USERS.ME_UPDATE,
//       formData,
//       {
//         headers: {
//           Authorization: `Bearer ${accessToken}`,
//         },
//       }
//     );

//     // update the user state zustand store
//     if (response.data) {
//       setUser(response.data, true);
//     }

//     return response.data;
//   } catch (error) {
//     // Re-throw so the component handles it
//     throw error.response?.data || { detail: "Unknown error" };
//   }
// };

// export const uploadUserPicture = async (formData) => {
//   const user = useAuth.getState().user;
//   const accessToken = useAuth.getState().accessToken;
//   const setUser = useAuth.getState().setUser;

//   try {
//     const response = await axios.post(
//       API_ROUTES.BASE_URL + API_ROUTES.USERS.UPLOAD_PICTURE,
//       formData,
//       {
//         headers: {
//           Authorization: `Bearer ${accessToken}`,
//           "Content-Type": "multipart/form-data",
//         },
//       }
//     );

//     // update the user picture zustand store
//     if (response.data) {
//       setUser({...user, 'picture':response.data.picture_url}, true);
//     }

    
//   } catch (error) {
//     // Re-throw so the component handles it
//     throw error.response?.data || { detail: "Unknown error" };
//   }
// }

// export const getAllUsers = async ({ page = 1, search = "" }) => {
//   const accessToken = useAuth.getState().accessToken;

//   try {
//     const response = await axios.get(
//       API_ROUTES.BASE_URL + API_ROUTES.ADMIN.USERS,
//       {
//         headers: {
//           Authorization: `Bearer ${accessToken}`,
//         },
//         params: {
//           page: page,
//           search: search,
//         },
//       }
//     );
//     return response.data;
//   } catch (error) {
//     console.error("Error fetching users:", error);
//     throw error.response?.data || { detail: "Unknown error" };
//   }
// };


// export const deleteUser = async (userId) => {
//   const accessToken = useAuth.getState().accessToken;

//   try {
//     const response = await axios.delete(
//       API_ROUTES.BASE_URL + API_ROUTES.ADMIN.USERS + userId + "/",
//       {
//         headers: {
//           Authorization: `Bearer ${accessToken}`,
//         },
//       }
//     );
//     return response.data;
//   } catch (error) {
//     console.error("Error deleting user:", error);
//     throw error.response?.data || { detail: "Unknown error" };
//   }
// }

// export const createUser = async (formData) => {
//   const accessToken = useAuth.getState().accessToken;
//   // Remove api_key from formData Because it will be generated by the server and can not be changed.
//   delete formData["api_key"];
//   try {   
//     const response = await axios.post(
//       API_ROUTES.BASE_URL + API_ROUTES.ADMIN.USERS,
//       formData,
//       {
//         headers: {
//           Authorization: `Bearer ${accessToken}`,
//         },
//       }
//     );
//     return response.data;
//   } catch (error) {
//     console.error("Error creating user:", error);
//     throw error.response?.data || { detail: "Unknown error" };
//   }
// };

// export const updateUser = async (userId, formData) => {
//   // console.log("updateUser", userId, formData);
//   const accessToken = useAuth.getState().accessToken;
// // Remove api_key from formData Because it will be generated by the server and can not be changed.
//   delete formData["api_key"];
//   try {
//     // console.log("updateUser", userId, formData);
//     const response = await axios.patch(
//       API_ROUTES.BASE_URL + API_ROUTES.ADMIN.USERS + userId + "/",
//       formData,
//       {
//         headers: {
//           Authorization: `Bearer ${accessToken}`,
//         },
//       }
//     );
//     return response.data;
//   } catch (error) {
//     console.error("Error updating user:", error);
//     throw error.response?.data || { detail: "Unknown error" };
//   }
// }


// services/userService.js
import axiosInstance from "./axiosInstance";
import API_ROUTES from "../config/apiRoutes";
import useAuth from "../store/useAuth";

export const updateUserMe = async (formData) => {
  const setUser = useAuth.getState().setUser;

  try {
    const response = await axiosInstance.patch(
      API_ROUTES.COMMON_USER_ADMIN.ME_UPDATE,
      formData
    );

    if (response.data) {
      setUser(response.data, true);
    }

    return response.data;
  } catch (error) {
    throw error.response?.data || { detail: "Unknown error" };
  }
};

export const uploadUserPicture = async (formData) => {
  const user = useAuth.getState().user;
  const setUser = useAuth.getState().setUser;

  try {
    const response = await axiosInstance.post(
      API_ROUTES.COMMON_USER_ADMIN.UPLOAD_PICTURE,
      formData,
      {
        headers: {
          "Content-Type": "multipart/form-data",
        },
      }
    );

    if (response.data) {
      setUser({ ...user, picture: response.data.picture_url }, true);
    }
  } catch (error) {
    throw error.response?.data || { detail: "Unknown error" };
  }
};

export const getAllUsers = async ({ page = 1, search = "" }) => {
  try {
    const response = await axiosInstance.get(API_ROUTES.ADMIN.USERS, {
      params: { page, search },
    });
    return response.data;
  } catch (error) {
    console.error("Error fetching users:", error);
    throw error.response?.data || { detail: "Unknown error" };
  }
};

export const deleteUser = async (userId) => {
  try {
    const response = await axiosInstance.delete(
      `${API_ROUTES.ADMIN.USERS}${userId}/`
    );
    return response.data;
  } catch (error) {
    console.error("Error deleting user:", error);
    throw error.response?.data || { detail: "Unknown error" };
  }
};

export const createUser = async (formData) => {
  delete formData.api_key;
  try {
    const response = await axiosInstance.post(
      API_ROUTES.ADMIN.USERS,
      formData
    );
    return response.data;
  } catch (error) {
    console.error("Error creating user:", error);
    throw error.response?.data || { detail: "Unknown error" };
  }
};

export const updateUser = async (userId, formData) => {
  delete formData.api_key;
  try {
    const response = await axiosInstance.patch(
      `${API_ROUTES.ADMIN.USERS}${userId}/`,
      formData
    );
    return response.data;
  } catch (error) {
    console.error("Error updating user:", error);
    throw error.response?.data || { detail: "Unknown error" };
  }
};
